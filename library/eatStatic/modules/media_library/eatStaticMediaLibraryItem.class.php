<?php

/**
 * @version 0.1.0
 * 2011-07-13 - Rick Hurst added version number 0.1.0
 */

class eatStaticMediaLibraryItem {
	
	public $id; // randomly generated id - derived from filename
	public $path; // path to data folder, not including filename
	public $filename; // filename (generated by framework)
	public $original_filename; // original filename as uploaded
	public $title;
	public $type; // file type e.g. movie, image, text
	
	/**
	 * @desc populate object attributes with those found in stored data
	 */
	public function loadFromId(){
		$stored_data = eatStaticStorage::retrieve('media_library', $this->id);
		if(isset($stored_data->original_filename)) $this->original_filename = $stored_data->original_filename;
		if(isset($stored_data->title)) $this->title = $stored_data->title;
		if(isset($stored_data->type)) $this->type = $stored_data->type;	
		if(isset($stored_data->path)) $this->path = $stored_data->path;
		if(isset($stored_data->filename)) $this->filename = $stored_data->filename;
	}
	
	public function setType(){
		switch(strtolower(eatStatic::getExtension($this->filename))){
			case "jpg":
				$this->type = 'image/jpeg';
			break;
			case "png":
				$this->type = "image/png";
			break;
			case "gif":
				$this->type = "image/gif";
			break;
			case "mov":
				$this->type = "movie/quicktime";
			break;
			case "mp4":
				$this->type = "movie/mpeg";
			break;
			case "flv":
				$this->type = "movie/flash";
			break;
			default:
				$this->type = "unknown";
			break;
		}
	}
	
	public function save(){
		$this->setType();
		eatStaticStorage::store('media_library', $this->id, $this);
	}
}

?>